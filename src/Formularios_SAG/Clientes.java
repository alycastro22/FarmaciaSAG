/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios_SAG;

import Conexion.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Allisson Castro
 */
public class Clientes extends javax.swing.JFrame {

    /**
     * Creates new form Clientes
     */
    public Clientes() {
        initComponents();
        Cargarg ch = new Cargarg();
        comboGenero.setModel(ch.getvalues());
        cargartabla();
        //cargartexto();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        txtRTN = new javax.swing.JTextField();
        txtNombreC = new javax.swing.JTextField();
        txtApellidoC = new javax.swing.JTextField();
        comboGenero = new javax.swing.JComboBox<>();
        txtFechaNac = new javax.swing.JFormattedTextField();
        txtDireccionC = new javax.swing.JTextField();
        txtTelefonoC = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtFechaRegistro = new javax.swing.JFormattedTextField();
        txtBuscarC = new javax.swing.JTextField();
        botonAgregarC = new javax.swing.JLabel();
        botonEditarC = new javax.swing.JLabel();
        botonGuardarC = new javax.swing.JLabel();
        botonCancelarC = new javax.swing.JLabel();
        botonBuscarC = new javax.swing.JLabel();
        botonRegresarC = new javax.swing.JLabel();
        tablaClientes = new javax.swing.JScrollPane();
        tablaCliente = new javax.swing.JTable();
        BotonInactivoC = new javax.swing.JRadioButton();
        BotonActivoC = new javax.swing.JRadioButton();
        txtEstadoC = new javax.swing.JLabel();
        txtGeneroC = new javax.swing.JLabel();
        txtIdC = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtRTN.setBorder(null);
        txtRTN.setEnabled(false);
        txtRTN.setOpaque(false);
        txtRTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRTNActionPerformed(evt);
            }
        });
        getContentPane().add(txtRTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, 260, 40));

        txtNombreC.setBorder(null);
        txtNombreC.setEnabled(false);
        txtNombreC.setOpaque(false);
        txtNombreC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtNombreCMousePressed(evt);
            }
        });
        txtNombreC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreCActionPerformed(evt);
            }
        });
        getContentPane().add(txtNombreC, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 405, 260, 40));

        txtApellidoC.setBorder(null);
        txtApellidoC.setEnabled(false);
        txtApellidoC.setOpaque(false);
        txtApellidoC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoCActionPerformed(evt);
            }
        });
        getContentPane().add(txtApellidoC, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 470, 260, 40));

        comboGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Femenino" }));
        comboGenero.setBorder(null);
        comboGenero.setEnabled(false);
        comboGenero.setOpaque(false);
        comboGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboGeneroActionPerformed(evt);
            }
        });
        getContentPane().add(comboGenero, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 540, 260, 40));

        txtFechaNac.setBorder(null);
        txtFechaNac.setEnabled(false);
        txtFechaNac.setOpaque(false);
        txtFechaNac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaNacActionPerformed(evt);
            }
        });
        getContentPane().add(txtFechaNac, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 606, 260, 40));

        txtDireccionC.setBorder(null);
        txtDireccionC.setEnabled(false);
        txtDireccionC.setOpaque(false);
        getContentPane().add(txtDireccionC, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 675, 260, 40));

        txtTelefonoC.setBorder(null);
        txtTelefonoC.setEnabled(false);
        txtTelefonoC.setOpaque(false);
        txtTelefonoC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoCActionPerformed(evt);
            }
        });
        getContentPane().add(txtTelefonoC, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 734, 260, 40));

        txtEmail.setBorder(null);
        txtEmail.setEnabled(false);
        txtEmail.setOpaque(false);
        getContentPane().add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 794, 260, 40));

        txtFechaRegistro.setBorder(null);
        txtFechaRegistro.setEnabled(false);
        txtFechaRegistro.setOpaque(false);
        getContentPane().add(txtFechaRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 854, 260, 40));

        txtBuscarC.setBorder(null);
        txtBuscarC.setOpaque(false);
        txtBuscarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarCActionPerformed(evt);
            }
        });
        txtBuscarC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarCKeyPressed(evt);
            }
        });
        getContentPane().add(txtBuscarC, new org.netbeans.lib.awtextra.AbsoluteConstraints(935, 282, 340, 40));

        botonAgregarC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonAgregarCMouseClicked(evt);
            }
        });
        getContentPane().add(botonAgregarC, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 160, 170, 50));

        botonEditarC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonEditarCMouseClicked(evt);
            }
        });
        getContentPane().add(botonEditarC, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 160, 170, 50));

        botonGuardarC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonGuardarCMouseClicked(evt);
            }
        });
        getContentPane().add(botonGuardarC, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 160, 170, 50));

        botonCancelarC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonCancelarCMouseClicked(evt);
            }
        });
        getContentPane().add(botonCancelarC, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 160, 180, 50));

        botonBuscarC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonBuscarCMouseClicked(evt);
            }
        });
        getContentPane().add(botonBuscarC, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 280, 30, 40));

        botonRegresarC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonRegresarCMouseClicked(evt);
            }
        });
        getContentPane().add(botonRegresarC, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 170, 40));

        tablaCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Apellido", "RTN", "Telefono", "Genero", "Fecha Nacimiento", "Direccion", "Email", "Fecha Registro"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaClienteMouseClicked(evt);
            }
        });
        tablaClientes.setViewportView(tablaCliente);

        getContentPane().add(tablaClientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 350, 900, 510));

        BotonInactivoC.setText("Inactivo");
        BotonInactivoC.setOpaque(false);
        BotonInactivoC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonInactivoCActionPerformed(evt);
            }
        });
        getContentPane().add(BotonInactivoC, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 290, -1, -1));

        BotonActivoC.setText("Activo");
        BotonActivoC.setOpaque(false);
        BotonActivoC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonActivoCActionPerformed(evt);
            }
        });
        getContentPane().add(BotonActivoC, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 290, -1, -1));

        txtEstadoC.setText("Estado");
        getContentPane().add(txtEstadoC, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 290, 70, 20));
        getContentPane().add(txtGeneroC, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 544, 120, 30));

        txtIdC.setEnabled(false);
        getContentPane().add(txtIdC, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 300, 100, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/componentes/Pantalla Clientes.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 1380, 890));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtApellidoCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoCActionPerformed

    private void txtFechaNacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaNacActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaNacActionPerformed

    private void txtTelefonoCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoCActionPerformed

    private void txtNombreCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreCActionPerformed

    private void comboGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboGeneroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboGeneroActionPerformed

    private void txtRTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRTNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRTNActionPerformed

    private void txtBuscarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarCActionPerformed

    private void botonAgregarCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAgregarCMouseClicked
        Habillitar();
    }//GEN-LAST:event_botonAgregarCMouseClicked

    private void botonEditarCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonEditarCMouseClicked
        int Id = Integer.parseInt(txtIdC.getText());
        String RTN = txtRTN.getText();
        String Nombre = txtNombreC.getText();
        String Apellido = txtApellidoC.getText();
        int Genero = comboGenero.getSelectedIndex();
        String FechaNac = txtFechaNac.getText();
        String Direccion = txtDireccionC.getText();
        String Telefono = txtTelefonoC.getText();
        String Email = txtEmail.getText();
        String FechaRegistro = txtFechaRegistro.getText();
        String Estado = "";

        if (BotonActivoC.isSelected() == true) {
            Estado = "Activo";
        } else if (BotonInactivoC.isSelected() == true) {
            Estado = "Inactivo";
        }

        try {
            Connection con = Conexion.getConexion();
            PreparedStatement ps = con.prepareStatement("Update Cliente set Nombre_Cliente=?,Apellido_Cliente=?,RTN=?,Telefono=?,Id_Genero=?,Direccion=?,Fecha_Nacimiento=?,[E-mail]=?,Fecha_Registro=?,estado=? Where Id_Cliente=?");
            ps.setInt(3, Integer.parseInt(RTN));
            ps.setString(1, Nombre);
            ps.setString(2, Apellido);
            ps.setInt(5, Genero);
            ps.setString(7, FechaNac);
            ps.setString(6, Direccion);
            ps.setInt(4, Integer.valueOf(Telefono));
            ps.setString(8, Email);
            ps.setString(9, FechaRegistro);
            ps.setString(10, Estado);
            ps.setInt(11, Id);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Registro Actualizado");
            cargartabla();
            BotonActivoC.setVisible(Boolean.TRUE);
            BotonInactivoC.setVisible(Boolean.TRUE);
            txtEstadoC.setVisible(Boolean.TRUE);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }

    }//GEN-LAST:event_botonEditarCMouseClicked
       private void botonGuardarCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonGuardarCMouseClicked
           String RTN = txtRTN.getText();
           String Nombre = txtNombreC.getText();
           String Apellido = txtApellidoC.getText();
           int Genero = comboGenero.getSelectedIndex();
           String FechaNac = txtFechaNac.getText();
           String Direccion = txtDireccionC.getText();
           String Telefono = txtTelefonoC.getText();
           String Email = txtEmail.getText();
           String FechaRegistro = txtFechaRegistro.getText();

           try {
               Connection con = Conexion.getConexion();
               PreparedStatement ps = con.prepareStatement("Insert into Cliente(Nombre_Cliente,Apellido_Cliente,RTN,Telefono,Id_Genero,Direccion,Fecha_Nacimiento,[E-mail],Fecha_Registro,estado) VALUES(?,?,?,?,?,?,?,?,?,?)");
               ps.setInt(3, Integer.parseInt(RTN));
               ps.setString(1, Nombre);
               ps.setString(2, Apellido);
               ps.setInt(5, Genero);
               ps.setString(7, FechaNac);
               ps.setString(6, Direccion);
               ps.setInt(4, Integer.valueOf(Telefono));
               ps.setString(8, Email);
               ps.setString(9, FechaRegistro);
               ps.setString(10, "Activo");
               ps.executeUpdate();
               JOptionPane.showMessageDialog(null, "Registro guardado");
               cargartabla();

           } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null, ex.toString());
           }

    }//GEN-LAST:event_botonGuardarCMouseClicked

    private void botonCancelarCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonCancelarCMouseClicked
        Limpiar();
    }//GEN-LAST:event_botonCancelarCMouseClicked

    private void botonBuscarCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonBuscarCMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_botonBuscarCMouseClicked

    private void botonRegresarCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonRegresarCMouseClicked
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPrincipal().setVisible(true);
            }
        });
        this.dispose();
    }//GEN-LAST:event_botonRegresarCMouseClicked

    private void tablaClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaClienteMouseClicked
        // //TODO add your handling code here:

        try {
            int fila = tablaCliente.getSelectedRow();
            int id = Integer.parseInt(tablaCliente.getValueAt(fila, 0).toString());
            PreparedStatement ps;
            ResultSet rs;
            Connection con = Conexion.getConexion();
            ps = con.prepareStatement("SELECT  Nombre_Cliente,Apellido_Cliente,RTN,Telefono,Id_Genero,Fecha_Nacimiento, Direccion, [E-mail],Fecha_Registro, estado FROM Cliente WHERE Id_Cliente=?");
            ps.setInt(1, id);
            rs = ps.executeQuery();

            while (rs.next()) {
                txtIdC.setText(String.valueOf(id));
                txtNombreC.setText(rs.getString("Nombre_Cliente"));
                txtApellidoC.setText(rs.getString("Apellido_Cliente"));
                txtRTN.setText(rs.getString("RTN"));
                txtTelefonoC.setText(rs.getString("Telefono"));
                comboGenero.setSelectedItem(rs.getString("Id_Genero"));
                txtFechaNac.setText(rs.getString("Fecha_Nacimiento"));
                txtDireccionC.setText(rs.getString("Direccion"));
                txtEmail.setText(rs.getString("E-mail"));
                txtFechaRegistro.setText(rs.getString("Fecha_Registro"));

                if (rs.getString("estado").equals("Activo")) {
                    BotonActivoC.setSelected(true);
                } else if (rs.getString("estado").equals("Inactivo")) {
                    BotonInactivoC.setSelected(true);
                }
            }

            System.out.println(txtIdC.getText());
            Habillitar();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }


    }//GEN-LAST:event_tablaClienteMouseClicked

    private void BotonActivoCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonActivoCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BotonActivoCActionPerformed

    private void BotonInactivoCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonInactivoCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BotonInactivoCActionPerformed

    private void txtBuscarCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarCKeyPressed
        buscarData(txtBuscarC.getText());
    }//GEN-LAST:event_txtBuscarCKeyPressed

    private void txtNombreCMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNombreCMousePressed
        if (txtNombreC.isEnabled() == false) {

            JOptionPane.showMessageDialog(null, "Dar Click en Agregar o Editar para utilizar el campo", "Advertencia", JOptionPane.WARNING_MESSAGE);


    }//GEN-LAST:event_txtNombreCMousePressed
    
    
    /**
         * @param args the command line arguments
         */
        
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Clientes().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton BotonActivoC;
    private javax.swing.JRadioButton BotonInactivoC;
    private javax.swing.JLabel botonAgregarC;
    private javax.swing.JLabel botonBuscarC;
    private javax.swing.JLabel botonCancelarC;
    private javax.swing.JLabel botonEditarC;
    private javax.swing.JLabel botonGuardarC;
    private javax.swing.JLabel botonRegresarC;
    private javax.swing.JComboBox<String> comboGenero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JTable tablaCliente;
    private javax.swing.JScrollPane tablaClientes;
    private javax.swing.JTextField txtApellidoC;
    private javax.swing.JTextField txtBuscarC;
    private javax.swing.JTextField txtDireccionC;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JLabel txtEstadoC;
    private javax.swing.JFormattedTextField txtFechaNac;
    private javax.swing.JFormattedTextField txtFechaRegistro;
    private javax.swing.JLabel txtGeneroC;
    private javax.swing.JLabel txtIdC;
    private javax.swing.JTextField txtNombreC;
    private javax.swing.JTextField txtRTN;
    private javax.swing.JTextField txtTelefonoC;
    // End of variables declaration//GEN-END:variables

    private void cargartabla() {
        DefaultTableModel modeloTabla = (DefaultTableModel) tablaCliente.getModel();
        modeloTabla.setRowCount(0);

        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;

        try {
            Connection con = Conexion.getConexion();
            ps = con.prepareStatement("SELECT C.Id_Cliente,C.Nombre_Cliente,C.Apellido_Cliente,C.RTN,C.Telefono,G.Genero,C.Fecha_Nacimiento,C.Direccion,C.[E-mail],C.Fecha_Registro,C.estado \n"
                    + "FROM Cliente AS C\n"
                    + "INNER JOIN Genero AS G ON C.Id_Genero = G.Id_Genero\n"
                    + "ORDER BY C.Id_Cliente");
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();

            while (rs.next()) {
                Object[] fila = new Object[columnas];
                for (int indice = 0; indice < columnas; indice++) {
                    fila[indice] = rs.getObject(indice + 1);
                }
                modeloTabla.addRow(fila);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }

    private void cargartexto() {
        int Id = Integer.parseInt(comboGenero.getSelectedItem().toString());
        PreparedStatement ps;
        ResultSet rs;
        String texto;

        try {
            Connection con = Conexion.getConexion();
            ps = con.prepareStatement("SELECT Genero FROM Genero where Id_Genero=?");
            rs = ps.executeQuery();

            texto = rs.getString("Genero");
            txtGeneroC.setText(texto);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }

    private void Habillitar() {

        txtRTN.enable(Boolean.TRUE);
        txtNombreC.enable(Boolean.TRUE);
        txtApellidoC.enable(Boolean.TRUE);
        txtDireccionC.enable(Boolean.TRUE);
        txtEmail.enable(Boolean.TRUE);
        txtFechaNac.enable(Boolean.TRUE);
        txtTelefonoC.enable(Boolean.TRUE);
        txtFechaRegistro.enable(Boolean.TRUE);
        comboGenero.enable(Boolean.TRUE);
    }

    private void Limpiar() {

        txtIdC.setText("");
        txtRTN.setText("");
        txtNombreC.setText("");
        txtApellidoC.setText("");
        comboGenero.setSelectedIndex(-1);
        txtFechaNac.setText("");
        txtDireccionC.setText("");
        txtTelefonoC.setText("");
        txtEmail.setText("");
        txtFechaRegistro.setText("");

        BotonActivoC.setVisible(Boolean.FALSE);
        BotonInactivoC.setVisible(Boolean.FALSE);
        txtEstadoC.setVisible(Boolean.FALSE);
    }

    public class Cargarg {

        public DefaultComboBoxModel getvalues() {

            DefaultComboBoxModel modelo = new DefaultComboBoxModel();
            try {
                Connection con = Conexion.getConexion();
                String sql = "select Genero from Genero";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(sql);
                while (rs.next()) {
                    modelo.addElement(rs.getString(1));
                }
                con.close();
                rs.close();
            } catch (Exception e) {
                System.out.println(e);
            }
            return modelo;
        }
    }

    void buscarData(String valor) {
        String[] titulos = {"ID", "Nombre", "Apellido", "RTN", "Telefono", "Genero", "Fecha de Nacimiento", "Direccion", "Email", "Fecha Registro", "Estado"};
        String[] registros = new String[13];
        String sql = "SELECT Id_Cliente,Nombre_Cliente,Apellido_Cliente,RTN, Telefono,Id_Genero,Fecha_Nacimiento,Direccion,[E-mail],Fecha_Registro,estado\n"
                + "FROM Cliente \n"
                + "WHERE CONCAT (Id_Cliente, ' ', Nombre_Cliente, ' ', RTN) LIKE '%" + valor + "%'\n"
                + "ORDER BY Id_Cliente";

        DefaultTableModel model = new DefaultTableModel(null, titulos);
        Connection con = Conexion.getConexion();

        try {

            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                registros[0] = rs.getString("Id_Cliente");
                registros[1] = rs.getString("Nombre_Cliente");
                registros[2] = rs.getString("Apellido_Cliente");
                registros[3] = rs.getString("RTN");
                registros[4] = rs.getString("Telefono");
                registros[5] = rs.getString("Id_Genero");
                registros[6] = rs.getString("Fecha_Nacimiento");
                registros[7] = rs.getString("Direccion");
                registros[8] = rs.getString("E-mail");
                registros[9] = rs.getString("Fecha_Registro");
                registros[10] = rs.getString("estado");
                model.addRow(registros);
            }

            tablaCliente.setModel(model);
            // anchoColumnas();
        } catch (SQLException ex) {
            Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
